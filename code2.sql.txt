SELECT * 
FROM subscriptions
LIMIT 100;
 
SELECT MIN(subscription_start)
FROM subscriptions;
 
SELECT MAX(subscription_start)
FROM subscriptions;
 
WITH months AS (
   SELECT '2017-01-01' AS first_day,
     '2017-01-31' AS last_day
   UNION
   SELECT '2017-02-01' AS first_day,
     '2017-02-28' AS last_day
   UNION
   SELECT '2017-03-01' AS first_day,
     '2017-03-31' AS last_day
  ) 	
SELECT *
FROM months;

WITH months AS (
    SELECT '2017-01-01' AS first_day,
      '2017-01-31' AS last_day
    UNION
    SELECT '2017-02-01' AS first_day,
      '2017-02-28' AS last_day
    UNION
    SELECT '2017-03-01' AS first_day,
      '2017-03-31' AS last_day
  ),
  --add cross_join temporary table here
cross_join AS (
    SELECT * 
    FROM subscriptions
    CROSS JOIN months)
SELECT *
FROM cross_join
LIMIT 10;

WITH months AS ( 
    SELECT '2017-01-01' AS first_day,
      '2017-01-31' AS last_day
    UNION
    SELECT '2017-02-01' AS first_day,
      '2017-02-28' AS last_day
    UNION
    SELECT '2017-03-01' AS first_day,
      '2017-03-31' AS last_day
  ),
cross_join AS (
    SELECT * 
    FROM subscriptions
    CROSS JOIN months),
   --add status temporary table here
status AS (
    SELECT id, 
       first_day AS month,
    CASE
        WHEN segment = 87
         AND (subscription_start < first_day)
         AND (
           subscription_end > first_day
           OR subscription_end IS NULL
        ) THEN 1
        ELSE 0
    END AS is_active_87, 
    CASE
        WHEN subscription_end BETWEEN first_day
        AND last_day AND segment = 87
        THEN 1
        ELSE 0
    END AS is_canceled_87,
    CASE
        WHEN segment = 30
        AND (subscription_start < first_day)
        AND (
           subscription_end > first_day
          OR subscription_end IS NULL
        ) THEN 1
        ELSE 0
    END AS is_active_30,   		
    CASE
        WHEN subscription_end BETWEEN first_day
        AND last_day AND segment = 30
        THEN 1
        ELSE 0
        END AS is_canceled_30
        FROM cross_join)
SELECT *
FROM status
LIMIT 10;

WITH months AS (
    SELECT '2017-01-01' AS first_day,
      '2017-01-31' AS last_day
    UNION
    SELECT '2017-02-01' AS first_day,
      '2017-02-28' AS last_day
    UNION
    SELECT '2017-03-01' AS first_day,
      '2017-03-31' AS last_day
  ),
cross_join AS (
    SELECT * 
    FROM subscriptions
    CROSS JOIN months),
status AS (
    SELECT id, 
      first_day AS month,
    CASE
        WHEN segment = 87
          AND(subscription_start < first_day)
          AND (
            subscription_end > first_day
            OR subscription_end IS NULL
        ) THEN 1
        ELSE 0
    END AS is_active_87, 
    CASE
        WHEN subscription_end BETWEEN first_day
        AND last_day AND segment = 87
        THEN 1
        ELSE 0
    END AS is_canceled_87,
    CASE
        WHEN segment = 87
          AND (subscription_start < first_day)
          AND (
            subscription_end > first_day
            OR subscription_end IS NULL
        ) THEN 1
   	ELSE 0
    END AS is_active_30,   		
    CASE
        WHEN subscription_end BETWEEN first_day
        AND last_day AND segment = 30
   	THEN 1
   	ELSE 0
        END AS is_canceled_30
        FROM cross_join),
 --add status_aggregate here
status_aggregate AS (
    SELECT month, 
     	SUM(is_active_87) AS sum_active_87,
        SUM(is_canceled_87) AS sum_canceled_87,             
        SUM(is_active_30) AS sum_active_30,
        SUM(is_canceled_30) AS sum_canceled_30
    FROM status
    GROUP BY month)
SELECT *
FROM status_aggregate;

WITH months AS ( 
    SELECT '2017-01-01' AS first_day,
      '2017-01-31' AS last_day
    UNION
    SELECT '2017-02-01' AS first_day,
      '2017-02-28' AS last_day
    UNION
    SELECT '2017-03-01' AS first_day,
      '2017-03-31' AS last_day
  ),
cross_join AS (
    SELECT * 
    FROM subscriptions
    CROSS JOIN months),
status AS (
    SELECT id, 
      first_day AS month,
    CASE
        WHEN segment = 87
          AND(subscription_start < first_day)
  	  AND (
            subscription_end > first_day
  	    OR subscription_end IS NULL
  	) THEN 1
        ELSE 0
    END AS is_active_87, 
    CASE
        WHEN subscription_end BETWEEN first_day
        AND last_day AND segment = 87
   	THEN 1
   	ELSE 0
    END AS is_canceled_87,
    CASE
        WHEN segment = 30
          AND(subscription_start < first_day)
      	  AND (subscription_end > first_day
            OR subscription_end IS NULL
        ) THEN 1
   	ELSE 0
    END AS is_active_30,   		
    CASE
        WHEN subscription_end BETWEEN first_day
   	AND last_day AND segment = 30
  	THEN 1
   	ELSE 0
        END AS is_canceled_30
        FROM cross_join),
status_aggregate AS (
    SELECT month, 
     	SUM(is_active_87) AS sum_active_87, 							
        SUM(is_canceled_87) AS sum_canceled_87,             
        SUM(is_active_30) AS sum_active_30,
        SUM(is_canceled_30) AS sum_canceled_30
    FROM status
    GROUP BY month)
SELECT month, 
    1.0 * sum_canceled_87 / sum_active_87 
    AS churn_rate_87,
    1.0 * sum_canceled_30 / sum_active_30
    AS churn_rate_30
FROM status_aggregate;

--Bonus
WITH months AS (
    SELECT *
    FROM subscriptions
    WHERE subscription_start < '2017-01-01'
    AND (
      (subscription_end >= '2017-01-01')
    OR (subscription_end IS NULL)
  ) ),
status AS (
    SELECT
        CASE
            WHEN (subscription_end > '2017-01-31')
            OR (subscription_end IS NULL) THEN 0
            ELSE 1
        END AS is_canceled,
        CASE
            WHEN subscription_start < '2017-01-01'
            AND (
  	    (subscription_end >= '2017-01-01')
  	    OR (subscription_end IS NULL)
            ) THEN 1
            ELSE 0
            END AS is_active
            FROM months)
SELECT 1.0 * SUM(is_canceled) / SUM(is_active)
FROM status;